// Sort a stack using recursion (https://www.geeksforgeeks.org/sort-a-stack-using-recursion/)

// TC-O(n^2)
// SC-0(n)
-- Code:

#include <stack>
#include <iostream>
 
using namespace std;
 
// Function to sort a stack using recursion
void sortStack(stack<int> &s) {
    // If the stack is empty, return
    if (s.empty())
        return;
     
    // Remove the top element of the stack
    int x = s.top();
    s.pop();
     
    // Sort the remaining elements in the stack using recursion
    sortStack(s);
     
    // Create two auxiliary stacks
    stack<int> tempStack;
     
    // Move all elements that are greater than x from the main stack to the tempStack
    while (!s.empty() && s.top() > x) {
        tempStack.push(s.top());
        s.pop();
    }
     
    // Push x back into the main stack
    s.push(x);
     
    // Move all elements from tempStack back to the main stack
    while (!tempStack.empty()) {
        s.push(tempStack.top());
        tempStack.pop();
    }
}
